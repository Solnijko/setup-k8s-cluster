- hosts: all
  become: yes
  tasks:
    - name: Run yum update
      ansible.builtin.yum:
        name: "*"
        state: latest
        update_cache: yes
        disable_gpg_check: yes
        update_only: yes

    - name: Change SELinux config in /etc/selinux/config
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'
        state: present

    - name: Disable SELinux during runtime if not disabled
      command: setenforce 0
      ignore_errors: yes

    - name: Reboot
      reboot:

    - name: Configure firewalld
      shell: |
        firewall-cmd --permanent --add-port=6443/tcp
        firewall-cmd --permanent --add-port 443/tcp
        firewall-cmd --permanent --add-port 4443/tcp
        firewall-cmd --permanent --add-port=2379-2380/tcp
        firewall-cmd --permanent --add-port=10250-10255/tcp
        firewall-cmd --permanent --add-port=30000-32767/tcp
        firewall-cmd --permanent --add-port 65000/tcp
        firewall-cmd --permanent --add-port 179/tcp
        firewall-cmd --permanent --add-port 9153/tcp
        firewall-cmd --permanent --add-port 53/tcp
        firewall-cmd --permanent --add-port 4/tcp
        firewall-cmd --permanent --add-port 4789/udp
        firewall-cmd --permanent --add-port 5473/tcp
        firewall-cmd --permanent --add-port 51820/udp
        firewall-cmd --permanent --add-port 51821/udp
        firewall-cmd --permanent --add-port 80/tcp
        firewall-cmd --permanent --add-port 8000-8999/tcp
        firewall-cmd --reload
        modprobe br_netfilter
    
    - name: Add modules to k8s.conf file
      blockinfile:
        path: /etc/modules-load.d/k8s.conf
        block: |
          overlay
          br_netfilter
        create: yes

    - name: Load overlay kernel module
      command: modprobe overlay

    - name: Load br_netfilter kernel module
      command: modprobe br_netfilter

    - name: Parameters required by setup, params persist across reboots
      blockinfile:
        path: /etc/sysctl.d/k8s.conf
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1

    - name: Apply sysctl settings
      command: sysctl --system

    - name: Disable SWAP 
      shell: |
        swapoff -a

    - name: Add cron job to disable swap on startup
      command: "(crontab -l 2>/dev/null; echo '@reboot /sbin/swapoff -a') | crontab -"
    
    - name: Remove old docker if already installed
      yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed
    
    - name: Install yum utilities
      yum:
        name: yum-utils
        state: installed

    - name: Add CentOS Docker repository
      command: >
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: Install Docker packages
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
          - git
          - wget
        state: present

    - name: Enable and start Docker service
      service:
        name: docker
        enabled: yes
        state: started

    - name: Enable and start containerd service
      service:
        name: containerd
        enabled: yes
        state: started

    - name: Add Kubernetes YUM repository
      yum_repository:
        name: Kubernetes
        description: Kubernetes YUM repository
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: Install Kubeadm
      yum:
        name: kubeadm
        state: installed

    - name: Remove containerd config /etc/containerd/config.toml
      file:
        path: /etc/containerd/config.toml
        state: absent

    - name: Restart containerd
      service:
        name: containerd
        state: restarted

    - name: Enable and start kubelet
      service: 
        name: kubelet
        enabled: yes
        state: started


